/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const ANDOR: typeof import('./src/models/gridDataModel')['ANDOR']
  const CLEAR_KEY: typeof import('./src/constants/index')['CLEAR_KEY']
  const DownloadType: typeof import('./src/models/gridDataModel')['DownloadType']
  const EffectScope: typeof import('vue')['EffectScope']
  const ExportType: typeof import('./src/models/gridDataModel')['ExportType']
  const FeatureName: typeof import('./src/models/moduleConfigModel')['FeatureName']
  const Language: typeof import('./src/language/index')['Language']
  const LanguageNames: typeof import('./src/language/index')['LanguageNames']
  const ModulePageType: typeof import('./src/models/moduleConfigModel')['ModulePageType']
  const ModuleType: typeof import('./src/models/moduleItemModel')['ModuleType']
  const Month_Regex: typeof import('./src/constants/index')['Month_Regex']
  const MoveDirection: typeof import('./src/models/gridDataModel')['MoveDirection']
  const PermissionFlagType: typeof import('./src/models/SecurityModel')['PermissionFlagType']
  const PrincipalScope: typeof import('./src/models/SecurityModel')['PrincipalScope']
  const PrincipalType: typeof import('./src/models/userProfileModel')['PrincipalType']
  const ResourceType: typeof import('./src/models/SecurityModel')['ResourceType']
  const SecurityPrincipalType: typeof import('./src/models/SecurityModel')['SecurityPrincipalType']
  const TableLevel: typeof import('./src/models/gridDataModel')['TableLevel']
  const acceptHMRUpdate: typeof import('pinia')['acceptHMRUpdate']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const createPinia: typeof import('pinia')['createPinia']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const defineStore: typeof import('pinia')['defineStore']
  const deleteRecords: typeof import('./src/services/module-service')['deleteRecords']
  const downloadTemplate: typeof import('./src/services/download-file-service')['downloadTemplate']
  const downloadTemplateWithData: typeof import('./src/services/download-file-service')['downloadTemplateWithData']
  const effectScope: typeof import('vue')['effectScope']
  const en: typeof import('./src/language/en')['default']
  const exportExcelData: typeof import('./src/services/download-file-service')['exportExcelData']
  const filter_security_columns: typeof import('./src/constants/index')['filter_security_columns']
  const getActivePinia: typeof import('pinia')['getActivePinia']
  const getComboxItems: typeof import('./src/services/metaData-service')['getComboxItems']
  const getContactRequestList: typeof import('./src/services/apply-contact-service')['getContactRequestList']
  const getContactRequestQueues: typeof import('./src/services/apply-contact-service')['getContactRequestQueues']
  const getContactRequestSummary: typeof import('./src/services/apply-contact-service')['getContactRequestSummary']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const getDateMessage: typeof import('./src/utils/datetime')['getDateMessage']
  const getEnglishDate: typeof import('./src/utils/datetime')['getEnglishDate']
  const getGeoGraphyList: typeof import('./src/services/metaData-service')['getGeoGraphyList']
  const getGridData: typeof import('./src/services/gridData-service')['getGridData']
  const getHistoryData: typeof import('./src/services/gridData-service')['getHistoryData']
  const getIcon: typeof import('./src/utils/icon-transfer')['getIcon']
  const getLovItems: typeof import('./src/services/metaData-service')['getLovItems']
  const getModuleConfig: typeof import('./src/services/module-service')['getModuleConfig']
  const getModulesList: typeof import('./src/services/module-service')['getModulesList']
  const getSecurityList: typeof import('./src/services/module-service')['getSecurityList']
  const getWeekNo: typeof import('./src/utils/datetime')['getWeekNo']
  const h: typeof import('vue')['h']
  const hideLoading: typeof import('./src/utils/loading')['hideLoading']
  const http: typeof import('./src/http/index')['default']
  const i18n: typeof import('./src/language/index')['i18n']
  const inject: typeof import('vue')['inject']
  const isElement: typeof import('./src/utils/datacheck')['isElement']
  const isNil: typeof import('./src/utils/datacheck')['isNil']
  const isNull: typeof import('./src/utils/datacheck')['isNull']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const isUndefined: typeof import('./src/utils/datacheck')['isUndefined']
  const isVoid: typeof import('./src/utils/datacheck')['isVoid']
  const login: typeof import('./src/services/login-service')['login']
  const mapActions: typeof import('pinia')['mapActions']
  const mapGetters: typeof import('pinia')['mapGetters']
  const mapState: typeof import('pinia')['mapState']
  const mapStores: typeof import('pinia')['mapStores']
  const mapWritableState: typeof import('pinia')['mapWritableState']
  const markRaw: typeof import('vue')['markRaw']
  const moduleId: typeof import('./src/constants/index')['moduleId']
  const module_security_columns: typeof import('./src/constants/index')['module_security_columns']
  const moveRecordUpDown: typeof import('./src/services/module-service')['moveRecordUpDown']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const onWatcherCleanup: typeof import('vue')['onWatcherCleanup']
  const parentId: typeof import('./src/constants/index')['parentId']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resetUserSetting: typeof import('./src/services/module-service')['resetUserSetting']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const router: typeof import('./src/router/index')['default']
  const saveSecuritySets: typeof import('./src/services/module-service')['saveSecuritySets']
  const saveUserSetting: typeof import('./src/services/module-service')['saveUserSetting']
  const setActivePinia: typeof import('pinia')['setActivePinia']
  const setLanuguage: typeof import('./src/services/login-service')['setLanuguage']
  const setMapStoreSuffix: typeof import('pinia')['setMapStoreSuffix']
  const setPrincipal: typeof import('./src/services/login-service')['setPrincipal']
  const setupI18n: typeof import('./src/language/index')['setupI18n']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const showLoading: typeof import('./src/utils/loading')['showLoading']
  const storeToRefs: typeof import('pinia')['storeToRefs']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const uploadFile: typeof import('./src/services/upload-file-service')['uploadFile']
  const useAttrs: typeof import('vue')['useAttrs']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useDownloadFile: typeof import('./src/hooks/useDownloadFile')['useDownloadFile']
  const useDynamicForm: typeof import('./src/hooks/useDynamicForm')['useDynamicForm']
  const useExportFile: typeof import('./src/hooks/useExportFile')['useExportFile']
  const useI18n: typeof import('vue-i18n')['useI18n']
  const useId: typeof import('vue')['useId']
  const useLink: typeof import('vue-router')['useLink']
  const useModel: typeof import('vue')['useModel']
  const useModuleTabsStore: typeof import('./src/stores/moduleTabs')['useModuleTabsStore']
  const useMoveUpOrDown: typeof import('./src/hooks/useMoveUpOrDown')['useMoveUpOrDown']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSlots: typeof import('vue')['useSlots']
  const useTemplateRef: typeof import('vue')['useTemplateRef']
  const useUserProfileStore: typeof import('./src/stores/userProfile')['useUserProfileStore']
  const validateFile: typeof import('./src/services/upload-file-service')['validateFile']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
  const zh: typeof import('./src/language/zh')['default']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, Slot, Slots, ComponentPublicInstance, ComputedRef, DirectiveBinding, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, MaybeRef, MaybeRefOrGetter, VNode, WritableComputedRef } from 'vue'
  import('vue')
  // @ts-ignore
  export type { ResourceType, SecurityPrincipalType, PrincipalScope, PermissionFlagType, CustomColumn, PermissionFlag, SecurityItem, SecurityRacItem } from './src/models/SecurityModel'
  import('./src/models/SecurityModel')
  // @ts-ignore
  export type { ContactRequestQueue, ContactRequestSummary, RequestContactParam } from './src/models/applyDataModel'
  import('./src/models/applyDataModel')
  // @ts-ignore
  export type { TableLevel, ANDOR, MoveDirection, ExportType, DownloadType, MoveResult, SearchConditionValue, RequestGridParams, RequestHistoryParams, ExportParams, DownloadParams, GridData } from './src/models/gridDataModel'
  import('./src/models/gridDataModel')
  // @ts-ignore
  export type { Geography, LovItem } from './src/models/metaDataModel'
  import('./src/models/metaDataModel')
  // @ts-ignore
  export type { ModulePageType, FeatureName, Attribute, Feature, ModuleConfig } from './src/models/moduleConfigModel'
  import('./src/models/moduleConfigModel')
  // @ts-ignore
  export type { ModuleType, ModuleTab, ModuleItem } from './src/models/moduleItemModel'
  import('./src/models/moduleItemModel')
  // @ts-ignore
  export type { PrincipalType, Principal, UserProfile } from './src/models/userProfileModel'
  import('./src/models/userProfileModel')
  // @ts-ignore
  export type { Language } from './src/language/index'
  import('./src/language/index')
}
